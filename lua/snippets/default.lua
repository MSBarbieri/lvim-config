local Default = {
  snippets = {
    langs = {
      lua = {
        fn = "fu",
        inline = "f=",
        import = "lreq",
        assign = "ll",
        const = "const",
        ['if'] = "if",
        if_let = nil,
        match = "switch",
        elif = "elseif",
        ['return'] = "rt",
        ['for'] = "for",
        foreach = "foreach",
        ['while'] = "while",
        type = "cl",
        impl = nil,
        constructor = nil,
        interface = nil,
        method = nil,
        getter = nil,
        setter = nil,
        prop = nil,
        print = "p",
        warn = nil,
        panic = nil,
        test = nil,
        vec = nil,
        ok = nil,
        some = nil,
      },
      rust = {
        fn = "fn",
        inline = "inline-fn",
        import = "mod",
        assign = "let",
        const = "const",
        ['if'] = "if",
        if_let = "if-let",
        match = "match",
        elif = "elseif",
        ['return'] = "rt",
        ['for'] = "for",
        foreach = "foreach",
        ['while'] = "while",
        type = "struct",
        impl = "impl",
        constructor = nil,
        interface = "trait",
        method = nil,
        getter = nil,
        setter = nil,
        prop = nil,
        print = "println",
        warn = "warn",
        panic = "panic",
        test = "test",
        vec = "vec",
        ok = "Ok",
        some = "Some",
      },
      typescript = {
        fn = "function",
        inline = "inline-fn",
        import = "import statement",
        assign = "let",
        const = "const",
        ['if'] = "if",
        if_let = nil,
        match = "switch",
        elif = nil,
        ['return'] = "rt",
        ['for'] = "for",
        foreach = "foreach =>",
        ['while'] = "while",
        type = "class",
        impl = nil,
        constructor = "constructor",
        interface = "iface",
        method = "method",
        getter = "get",
        setter = "set",
        prop = nil,
        print = "log",
        warn = "warn",
        panic = "throw",
        test = nil,
        vec = nil,
        ok = nil,
        some = nil,
      }
    },
    frameworks = {
    }
  }
}

return Default
